[build-system]
requires = [ "poetry-core",]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
skips = [ "B101",]

[tool.coverage.run]
parallel = true

[tool.mypy]
plugins = [ "pydantic.mypy",]

[tool.poetry]
name = "KinkLink"
version = "0.1.0"
description = ""
authors = [ "Karrenbelt <karrenbelt_git@pm.me>",]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11,<3.13"

[tool.poetry.group.autonomy.dependencies]
open-autonomy = "^0.14.12"
open-aea-cli-ipfs = "^1.52.0"
open-aea-ledger-solana = "^1.52.0"
open-aea-ledger-ethereum = "^1.52.0"
open-aea-ledger-cosmos = "^1.52.0"
open-aea-test-autonomy = "^0.14.12"

[tool.poetry.group.dev.dependencies]
ipython = "^8.24.0"
ruff = "^0.4.4"
mypy = "^1.10.0"
pytest = "7.2.1"
pytest-cov = "^5.0.0"
pytest-asyncio = "0.21.1"
liccheck = "^0.9.2"
nox = "^2024.4.15"
bandit = "^1.7.8"
coverage = "^7.5.1"
sphinx = "^7.3.7"
hypothesis = "^6.102.4"

[tool.ruff]
line-length = 100
indent-width = 4
fix = true
preview = false
show-fixes = false
respect-gitignore = true
exclude = []
output-format = "grouped"
target-version = "py311"
required-version = ">=0.3.2"

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 100
skip-magic-trailing-comma = false

[tool.ruff.lint]
preview = true
ignore = [ "D203", "D213", "D417",]
task-tags = [ "TODO", "FIXME",]
logger-objects = []
allowed-confusables = []
typing-modules = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = [ "ALL",]
unfixable = []
select = [ "F", "E", "W", "C90", "I", "N", "D", "UP", "YTT", "ANN", "ASYNC", "TRIO", "S", "BLE", "FBT", "B", "A", "COM", "CPY", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF",]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.flake8-copyright]
notice-rgx = "(?i)Copyright\\s+((?:\\(C\\)|Â©)\\s+)?\\d{4}([-,]\\d{4})*"

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"statsmodels.api" = "sm"


[tool.ruff.lint.flake8-type-checking]
exempt-modules = [ "typing", "typing_extensions",]
runtime-evaluated-base-classes = [ "pydantic.BaseModel", "sqlalchemy.orm.DeclarativeBase",]
runtime-evaluated-decorators = [ "pydantic.validate_call", "attrs.define",]
quote-annotations = false

[tool.ruff.lint.isort]
length-sort = true
order-by-type = true
lines-after-imports = 2
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pep8-naming]
ignore-names = []
classmethod-decorators = [ "pydantic.validator", "declared_attr", "expression", "comparator",]
staticmethod-decorators = []

[tool.ruff.lint.pylint]
max-args = 5
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-nested-blocks = 3
max-positional-args = 3
max-public-methods = 20
max-returns = 6
max-statements = 50

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true